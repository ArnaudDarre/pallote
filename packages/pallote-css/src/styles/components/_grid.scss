@use "../common/mixins";
@use "../common/variables";

// —————————————————————————————————————————————————————————————————
// variables
// elements
// wrap
// direction
// justifyContent
// alignItems
// alignSelf
// flexGrow
// spacing
// width
// —————————————————————————————————————————————————————————————————

// —————————————————————————————————————————————————————————————————
// variables
// —————————————————————————————————————————————————————————————————

variables.$col:	calc(100% / 12);

// —————————————————————————————————————————————————————————————————
// elements
// —————————————————————————————————————————————————————————————————

.grid {
  display: flex;
  box-sizing: border-box;
  flex-direction: row;
  flex-wrap: wrap;
  
  &__item:not(.grid) {
    position: relative;
    display: flex;
    flex-direction: column;
    float: left;
  }
}

// —————————————————————————————————————————————————————————————————
// wrap
// —————————————————————————————————————————————————————————————————

.grid {

  // have children wrap automatically
  &--wrap {
    justify-content: center;

    > .grid__item {
      flex: 1 0 0;
    }
  }
}

// —————————————————————————————————————————————————————————————————
// direction
// —————————————————————————————————————————————————————————————————

.grid--column { flex-direction: column; }
.grid--columnReverse { flex-direction: column-reverse; }
.grid--row { flex-direction: row; flex-wrap: wrap; }
.grid--rowReverse { flex-direction: row-reverse; flex-wrap: wrap; }

// —————————————————————————————————————————————————————————————————
// justifyContent
// —————————————————————————————————————————————————————————————————

.grid--jc-center { justify-content: center;}
.grid--jc-end { justify-content: flex-end;}
.grid--jc-start { justify-content: flex-start;}
.grid--jc-spaceAround { justify-content: space-around;}
.grid--jc-spaceBetween { justify-content: space-between;}
.grid--jc-spaceEvenly { justify-content: space-evenly;}

// —————————————————————————————————————————————————————————————————
// alignItems
// —————————————————————————————————————————————————————————————————

.grid--ai-stretch { align-items: stretch; }
.grid--ai-center { align-items: center; }
.grid--ai-end { align-items: flex-end; }
.grid--ai-start { align-items: flex-start; }
.grid--ai-baseline { align-items: baseline; }

// —————————————————————————————————————————————————————————————————
// alignSelf
// —————————————————————————————————————————————————————————————————

.grid--as-stretch { align-self: stretch; }
.grid--as-center { align-self: center; }
.grid--as-end { align-self: flex-end; }
.grid--as-start { align-self: flex-start; }
.grid--as-baseline { align-self: baseline; }


// —————————————————————————————————————————————————————————————————
// flexGrow
// —————————————————————————————————————————————————————————————————

.grid--fg {

  &-0 { flex-grow: 0; }
  &-1 { flex-grow: 1; }
  &-auto { flex-grow: auto; }
}

// —————————————————————————————————————————————————————————————————
// spacing
// —————————————————————————————————————————————————————————————————

@for $spacingWidth from 1 through 12 {

  .grid--spacing#{$spacingWidth} {
    margin: -($spacingWidth * 0.5rem)*0.5;
    width: calc(100% + #{$spacingWidth * 0.5rem});

    > .grid__item {
      padding: ($spacingWidth * 0.5rem)*0.5;
    }

    &.grid__item {
      width: calc(100% + #{$spacingWidth * 0.5rem});
    }
  }
}

// —————————————————————————————————————————————————————————————————
// width
// —————————————————————————————————————————————————————————————————

@for $colWidth from 1 through 12 {

  .grid--#{$colWidth} {
    width: $colWidth*variables.$col;

    &.grid {
      width: $colWidth*variables.$col;
    }

    @for $spacingWidth from 1 through 12 {

      &.grid--spacing#{$spacingWidth} {
        width: calc(#{$colWidth*variables.$col} + #{$spacingWidth * 0.5rem});
      }
    }
  }
}

@mixin break-width($breakpoint) {

  @include mixins.responsive(up, $breakpoint) {

    @for $colWidth from 1 through 12 {

      &#{$colWidth} {
        width: $colWidth*variables.$col;

        &.grid {
          width: $colWidth*variables.$col;
        }

        @for $spacingWidth from 1 through 12 {

          &.grid--spacing#{$spacingWidth} {
            width: calc(#{$colWidth*variables.$col} + #{$spacingWidth * 0.5rem});
          }
        }
      }
    }
  }
}

[class*="grid--xs"],
[class*="grid--sm"],
[class*="grid--md"],
[class*="grid--lg"],
[class*="grid--xl"] {
  width: 100%;
}

.grid {

  &--xs { @include break-width(mobile-sm); }
  &--sm { @include break-width(mobile); }
  &--md { @include break-width(tablet); }
  &--lg { @include break-width(laptop); }
  &--xl { @include break-width(desktop); }
}
