@use "../common/variables";
@use "../utilities/text";

// —————————————————————————————————————————————————————————————————
// elements
// size
// direction
// align
// transparent
// hasShadow
// —————————————————————————————————————————————————————————————————

// —————————————————————————————————————————————————————————————————
// elements
// —————————————————————————————————————————————————————————————————

.card {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  width: 100%;
  overflow: hidden; // hide corners when CardMedia has fullWidth prop set to true
  border: variables.$border;

  &:not(.card--transparent) {
    background-color: variables.$background-paper;
  }

  &__media {
    flex-basis: 0;
    
    &Inner {
      background-size: cover;
      background-repeat: no-repeat;
      background-position: center center;
      width: 100%;
      height: 100%;
      background-color: variables.$overlay;
      overflow: hidden;
      padding-bottom: 50%;
      
      .card--transparent & {
        background-color: variables.$overlay-contrast;
      }
    }
  }

  &__label,
  &__title {
    @extend %text-bold;
  }

  &__title {
    line-height: 1.25;
  }
  
  &__subtitle {
    @extend %text-regular;
  }
  
  &__content {
    display: inline-flex;
    flex-direction: column;
    align-items: flex-start;

    &--fullWidth {

      .card > &.card__content {
        padding-right: 0;
        padding-left: 0;
      }
    }
  }

  &__actions {
    display: flex;
    justify-content: space-between;

    >*:only-child {
      margin-left: auto;
    }

    &--portrait {
      flex-direction: column;

      >*:not(:last-child) {
        margin-bottom: variables.$spacing-md;
      }
    }
  }
}

// —————————————————————————————————————————————————————————————————
// size
// —————————————————————————————————————————————————————————————————

@mixin size($value, $size) {

  &:not(.card--transparent) {
    border-radius: $size;
  } 
  
  &.card--hasShadow {
    box-shadow: 0 0 $size $size*0.25 rgba(variables.$main ,0.3);
  }

  > .card__media,
  > .card__header,
  > .card__content,
  > .card__actions {
    padding: $size;

    &:not(:first-child) {
      padding-top: 0;
    }
  }

  > .card__actions {
    margin-top: auto;
  }

  &.card--transparent {

    > .card__media,
    > .card__header,
    > .card__content,
    > .card__actions {
      padding: 0;
        
      &:not(:first-child) {
        padding-top: $size;
      }
    }

    > .card__media .card__mediaInner {
      border-radius: calc($size/2);
    }
  }

  .card__media--fullWidth {
    padding-right: 0;
    padding-top: 0;
    padding-left: 0;
  }

  .card {

    &__label {
      @if $value == xs { @extend %overline; }
      @else if $value == sm { @extend %overline; }
      @else if $value == md { @extend %overline; }
      @else if $value == lg { @extend %caption; }
      @else if $value == xl { @extend %body; }
    }

    &__title {
      @if $value == xs { @extend %body; }
      @else if $value == sm { @extend %subtitle; }
      @else if $value == md { @extend %h6; }
      @else if $value == lg { @extend %h5; }
      @else if $value == xl { @extend %h4; }
    }

    &__subtitle {
      @if $value == xs { @extend %caption; }
      @else if $value == sm { @extend %body; }
      @else if $value == md { @extend %subtitle; }
      @else if $value == lg { @extend %h6; }
      @else if $value == xl { @extend %h5; }
      margin-top: calc($size / 3);
    }

    &__mediaInner {
      border-radius: $size*0.25;
    }
  }

  > .card__media--fullWidth .card__mediaInner {
    border-radius: 0;
  }

  &.card--transparent > .card__media--fullWidth .card__mediaInner {
    border-radius: $size*0.5;
  }

  &.card--landscape {

    > .card__media,
    > .card__header,
    > .card__content,
    > .card__actions {
      padding-top: $size;

      &:not(:first-child) {
        padding-left: 0;
      }
    }

    > .card__actions {
      margin-left: auto;
      flex-direction: column;
      justify-content: flex-start;
    }

    &.card--transparent {

      > .card__media,
      > .card__header,
      > .card__content,
      > .card__actions {
        padding: 0;
        
        &:not(:first-child) {
          padding-left: $size;
        }
      }

      > .card__media .card__mediaInner {
        border-radius: calc($size/2);
      }
    }

    .card__media--fullWidth {
      padding-top: 0;
      padding-bottom: 0;
      padding-left: 0;
    }
  }
}

.card {
  @include size(md, variables.$spacing-md+variables.$spacing-sm);
  &--xs.card { @include size(xs, variables.$spacing-sm+variables.$spacing-xs); }
  &--sm.card { @include size(sm, variables.$spacing-md); }
  &--lg.card { @include size(lg, variables.$spacing-lg); }
  &--xl.card { @include size(xl, variables.$spacing-lg+variables.$spacing-sm); }
}

// —————————————————————————————————————————————————————————————————
// direction
// —————————————————————————————————————————————————————————————————

// most of the direction styling is handled by the size mixin

.card--landscape {
  flex-direction: row;
}

// —————————————————————————————————————————————————————————————————
// align
// —————————————————————————————————————————————————————————————————

.card {

  &--center { text-align: center; }
  &--right { text-align: right; }
}
// —————————————————————————————————————————————————————————————————
// transparent
// —————————————————————————————————————————————————————————————————

// the transparent styling is handled by the size mixin

// —————————————————————————————————————————————————————————————————
// hasShadow
// —————————————————————————————————————————————————————————————————

// the shadow styling is handled by the size mixin
